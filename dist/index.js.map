{"version":3,"sources":["../config.js","app.js","index.js"],"names":["config","development","connectionString","test","production","module","exports","Koa","require","app","server","createServer","callback","WebSocket","wss","Server","Router","cors","bodyparser","jwt","sqlite3","verbose","open","SECRET","environment","process","env","NODE_ENV","console","log","use","db","filename","driver","Database","exec","verifyJwtMiddleware","ctx","next","authHeader","headers","authorization","startsWith","response","status","body","message","token","split","decoded","verify","state","user","principal","err","users","name","pass","checkLogin","some","u","createJwt","sign","clients","Map","broadcast","data","forEach","client","key","oneClient","send","JSON","stringify","on","ws","req","url","URL","host","username1","searchParams","get","once","toString","username","has","set","push","userConnections","index","indexOf","splice","length","delete","router","post","request","query","page","pageSize","parseInt","offset","rows","all","brand","is_new","car_image","latitude","longitude","date","Date","toISOString","result","run","newCar","id","lastID","event","payload","params","car","put","updatedCar","_objectSpread","undefined","del","routes","allowedMethods","listen"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const config = {\n  development: {\n    connectionString: './development_db.sqlite',\n  },\n  test: {\n    connectionString: ':memory:',\n  },\n  production: {\n    connectionString: './production_db.sqlite',\n  },\n};\n\nmodule.exports = config;\n","const Koa = require(\"koa\");\nconst app = new Koa();\nconst server = require(\"http\").createServer(app.callback());\nconst WebSocket = require(\"ws\");\nconst wss = new WebSocket.Server({ server });\nconst Router = require(\"koa-router\");\nconst cors = require(\"koa-cors\");\nconst bodyparser = require(\"koa-bodyparser\");\nconst jwt = require(\"jsonwebtoken\");\nconst sqlite3 = require(\"sqlite3\").verbose();\nconst { open } = require(\"sqlite\");\nconst config = require(\"../config\"); // Adjust the path as necessary\nconst SECRET = \"shhhhh\";\nconst environment = process.env.NODE_ENV || \"development\";\nconst { connectionString } = config[environment];\nconsole.log(\"conn string is:\", connectionString);\napp.use(bodyparser());\napp.use(cors());\n\n// Initialize SQLite database\nlet db;\n(async () => {\n  db = await open({\n    filename: connectionString,\n    driver: sqlite3.Database,\n  });\n\n  // Create table if not exists\n  await db.exec(`\n    CREATE TABLE IF NOT EXISTS cars (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      brand TEXT NOT NULL,\n      date TEXT NOT NULL,\n      is_new INTEGER NOT NULL,\n      car_image TEXT,\n      latitude INTEGER,\n      longitude INTEGER\n    )\n  `);\n})();\n\n// JWT Verification Middleware\nconst verifyJwtMiddleware = async (ctx, next) => {\n  const authHeader = ctx.headers.authorization;\n  if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n    ctx.response.status = 401;\n    ctx.response.body = { message: \"Authorization token required\" };\n    return;\n  }\n\n  const token = authHeader.split(\" \")[1];\n  try {\n    const decoded = jwt.verify(token, SECRET);\n    ctx.state.user = decoded.principal; // Store decoded user information in context\n    await next();\n  } catch (err) {\n    ctx.response.status = 403;\n    ctx.response.body = { message: \"Invalid or expired token\" };\n  }\n};\n\n// Error Handling Middleware\napp.use(async (ctx, next) => {\n  try {\n    await next();\n  } catch (err) {\n    ctx.response.body = { message: err.message || \"Unexpected error\" };\n    ctx.response.status = 500;\n  }\n});\n\n// Users and JWT Token Utilities\nconst users = [\n  { name: \"vlad\", pass: \"1234\" },\n  { name: \"gigel\", pass: \"1111\" },\n];\n\nconst checkLogin = (user) =>\n  users.some((u) => u.name === user.name && u.pass === user.pass);\n\nconst createJwt = (name) => jwt.sign({ principal: name }, SECRET);\n\n// Broadcasting Function\nconst clients = new Map();\nconst broadcast = (data) => {\n  clients.forEach((client, key) => {\n    if (data.user && data.user === key) {\n      client.forEach((oneClient) => {\n        oneClient.send(JSON.stringify(data));\n      });\n    }\n  });\n};\n\nwss.on(\"connection\", (ws, req) => {\n  const url = new URL(req.url, `http://${req.headers.host}`);\n  const username1 = url.searchParams.get(\"username\");\n\n  ws.once(\"message\", (data) => {\n    const token = data.toString();\n    const decoded = jwt.verify(token, SECRET);\n    if (decoded && decoded.principal) {\n      const username = decoded.principal;\n      if (!clients.has(username)) {\n        clients.set(username, []);\n      }\n      clients.get(username).push(ws);\n    }\n  });\n\n  ws.on(\"close\", () => {\n    const userConnections = clients.get(username1);\n    if (userConnections) {\n      const index = userConnections.indexOf(ws);\n      if (index !== -1) {\n        userConnections.splice(index, 1);\n        if (userConnections.length === 0) {\n          clients.delete(username1);\n        }\n      }\n    }\n  });\n});\n\n// Routes\nconst router = new Router();\n\n// Login Route\nrouter.post(\"/login\", async (ctx) => {\n  const { name, pass } = ctx.request.body;\n  if (!name || !pass) {\n    ctx.response.status = 400;\n    ctx.response.body = { message: \"Name and password are required\" };\n  } else if (checkLogin({ name, pass })) {\n    ctx.response.status = 200;\n    ctx.response.body = { token: createJwt(name) };\n  } else {\n    ctx.response.status = 400;\n    ctx.response.body = { message: \"Invalid credentials\" };\n  }\n});\n\n// Fetch all cars\nrouter.get(\"/car\", verifyJwtMiddleware, async (ctx) => {\n  try {\n    console.log(\"Query Parameters:\", ctx.query); // Log query parameters\n    let page = 1;\n    let pageSize = 10;\n    if (ctx.query && ctx.query.page) {\n      page = parseInt(ctx.query.page, 10) || 1;\n    }\n    if (ctx.query && ctx.query.pageSize) {\n      pageSize = parseInt(ctx.query.pageSize, 10) || 10;\n    }\n    console.log(\"bloody pagesize is: \", pageSize);\n    const offset = (page - 1) * pageSize;\n    rows = await db.all(\"SELECT * FROM cars LIMIT ? OFFSET ?\", [\n      pageSize,\n      offset,\n    ]);\n    ctx.response.body = rows;\n    ctx.response.status = 200;\n    console.log(\"sending back rows:\", rows);\n  } catch (err) {\n    console.log(\"Err is: \", err);\n\n    ctx.response.status = 500;\n    ctx.response.body = { message: \"Error fetching cars\" };\n  }\n});\n\n// Add a new car\nrouter.post(\"/car\", verifyJwtMiddleware, async (ctx) => {\n  const { brand, is_new, car_image, latitude, longitude } = ctx.request.body;\n  console.log(\"received new post request:\", ctx.request.body);\n  if (!brand) {\n    ctx.response.status = 400;\n    ctx.response.body = { message: \"Brand is required\" };\n    return;\n  }\n\n  try {\n    const date = new Date().toISOString();\n    const result = await db.run(\n      \"INSERT INTO cars (brand, date, is_new, car_image, latitude, longitude) VALUES (?, ?, ?, ?,?,?)\",\n      [brand, date, is_new ? 1 : 0, car_image, latitude, longitude],\n    );\n    const newCar = {\n      id: result.lastID,\n      brand,\n      date,\n      is_new,\n      car_image,\n      latitude,\n      longitude,\n    };\n    ctx.response.body = newCar;\n    ctx.response.status = 201;\n    broadcast({ event: \"created\", user: ctx.state.user, payload: newCar });\n  } catch (err) {\n    console.log(\"failed, error is: \", err);\n    ctx.response.status = 500;\n    ctx.response.body = { message: \"Error adding car\" };\n  }\n});\n\n// Fetch a specific car\nrouter.get(\"/car/:id\", verifyJwtMiddleware, async (ctx) => {\n  const { id } = ctx.params;\n  console.log(\"looking for car with id: \", id);\n\n  try {\n    const car = await db.get(\"SELECT * FROM cars WHERE id = ?\", [id]);\n    if (car) {\n      ctx.response.body = car;\n      ctx.response.status = 200;\n      console.log(\"found car: \", id);\n    } else {\n      ctx.response.status = 404;\n      ctx.response.body = { message: `Car with id ${id} not found` };\n      console.log(\"no car: \", id);\n    }\n  } catch (err) {\n    ctx.response.status = 500;\n    ctx.response.body = { message: \"Error fetching car\" };\n  }\n});\n\n// Update a car\nrouter.put(\"/car/:id\", verifyJwtMiddleware, async (ctx) => {\n  const { id } = ctx.params;\n  const { brand, is_new, car_image, latitude, longitude } = ctx.request.body;\n  console.log(\"got request to edit car:\", ctx.request.body);\n  try {\n    const car = await db.get(\"SELECT * FROM cars WHERE id = ?\", [id]);\n    if (!car) {\n      ctx.response.status = 404;\n      ctx.response.body = { message: `Car with id ${id} not found` };\n      return;\n    }\n\n    const updatedCar = {\n      ...car,\n      brand: brand || car.brand,\n      is_new: is_new !== undefined ? (is_new ? 1 : 0) : car.is_new,\n      car_image: car_image || car.car_image,\n      latitude: latitude,\n      longitude: longitude,\n    };\n\n    await db.run(\n      \"UPDATE cars SET brand = ?, is_new = ?, car_image = ?, latitude = ?, longitude = ? WHERE id = ?\",\n      [\n        updatedCar.brand,\n        updatedCar.is_new,\n        updatedCar.car_image,\n        updatedCar.latitude,\n        updatedCar.longitude,\n        id,\n      ],\n    );\n\n    ctx.response.body = updatedCar;\n    ctx.response.status = 200;\n    console.log(\"broadcasting changed car:\", updatedCar);\n    broadcast({ event: \"updated\", user: ctx.state.user, payload: updatedCar });\n  } catch (err) {\n    ctx.response.status = 500;\n    ctx.response.body = { message: \"Error updating car\" };\n  }\n});\n\n// Delete a car\nrouter.del(\"/car/:id\", verifyJwtMiddleware, async (ctx) => {\n  const { id } = ctx.params;\n  try {\n    const car = await db.get(\"SELECT * FROM cars WHERE id = ?\", [id]);\n    if (!car) {\n      ctx.response.status = 404;\n      ctx.response.body = { message: `Car with id ${id} not found` };\n      return;\n    }\n\n    await db.run(\"DELETE FROM cars WHERE id = ?\", [id]);\n    ctx.response.status = 204;\n    broadcast({ event: \"deleted\", user: ctx.state.user, payload: car });\n  } catch (err) {\n    ctx.response.status = 500;\n    ctx.response.body = { message: \"Error deleting car\" };\n  }\n});\n\napp.use(router.routes());\napp.use(router.allowedMethods());\nmodule.exports = server;\n","const server = require (\"./app\");\n\nserver.listen(3000, () => {\n  console.log(\"Server is running on http://localhost:3000\");\n});\n"]}