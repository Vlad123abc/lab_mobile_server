{"version":3,"sources":["../config.js","app.js","index.js"],"names":["config","development","connectionString","test","production","module","exports","Koa","require","app","server","createServer","callback","WebSocket","wss","Server","Router","cors","bodyparser","jwt","sqlite3","verbose","open","SECRET","environment","process","env","NODE_ENV","console","log","use","db","filename","driver","Database","exec","verifyJwtMiddleware","ctx","next","authHeader","headers","authorization","startsWith","response","status","body","message","token","split","decoded","verify","state","user","principal","err","users","name","pass","checkLogin","some","u","createJwt","sign","clients","Map","broadcast","data","forEach","client","key","oneClient","send","JSON","stringify","on","ws","req","url","URL","host","username1","searchParams","get","once","toString","username","has","set","push","userConnections","index","indexOf","splice","length","delete","router","post","request","rows","all","brand","is_new","date","Date","toISOString","result","run","newCar","id","lastID","event","payload","params","car","put","updatedCar","_objectSpread","undefined","del","routes","allowedMethods","listen"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["const config = {\n  development: {\n    connectionString: './development_db.sqlite',\n  },\n  test: {\n    connectionString: ':memory:',\n  },\n  production: {\n    connectionString: './production_db.sqlite',\n  },\n};\n\nmodule.exports = config;\n","const Koa = require(\"koa\");\nconst app = new Koa();\nconst server = require(\"http\").createServer(app.callback());\nconst WebSocket = require(\"ws\");\nconst wss = new WebSocket.Server({ server });\nconst Router = require(\"koa-router\");\nconst cors = require(\"koa-cors\");\nconst bodyparser = require(\"koa-bodyparser\");\nconst jwt = require(\"jsonwebtoken\");\nconst sqlite3 = require(\"sqlite3\").verbose();\nconst { open } = require(\"sqlite\");\nconst config = require('../config'); // Adjust the path as necessary\nconst SECRET = \"shhhhh\";\nconst environment = process.env.NODE_ENV || 'development';\nconst { connectionString } = config[environment];\nconsole.log(\"conn string is:\", connectionString);\napp.use(bodyparser());\napp.use(cors());\n\n// Initialize SQLite database\nlet db;\n(async () => {\n  db = await open({\n    filename: connectionString,\n    driver: sqlite3.Database,\n  });\n    \n  // Create table if not exists\n  await db.exec(`\n    CREATE TABLE IF NOT EXISTS cars (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      brand TEXT NOT NULL,\n      date TEXT NOT NULL,\n      is_new INTEGER NOT NULL\n    )\n  `);\n})();\n\n// JWT Verification Middleware\nconst verifyJwtMiddleware = async (ctx, next) => {\n  const authHeader = ctx.headers.authorization;\n  if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n    ctx.response.status = 401;\n    ctx.response.body = { message: \"Authorization token required\" };\n    return;\n  }\n\n  const token = authHeader.split(\" \")[1];\n  try {\n    const decoded = jwt.verify(token, SECRET);\n    ctx.state.user = decoded.principal; // Store decoded user information in context\n    await next();\n  } catch (err) {\n    ctx.response.status = 403;\n    ctx.response.body = { message: \"Invalid or expired token\" };\n  }\n};\n\n// Error Handling Middleware\napp.use(async (ctx, next) => {\n  try {\n    await next();\n  } catch (err) {\n    ctx.response.body = { message: err.message || \"Unexpected error\" };\n    ctx.response.status = 500;\n  }\n});\n\n// Users and JWT Token Utilities\nconst users = [\n  { name: \"vlad\", pass: \"1234\" },\n  { name: \"gigel\", pass: \"1111\" },\n];\n\nconst checkLogin = (user) =>\n  users.some((u) => u.name === user.name && u.pass === user.pass);\n\nconst createJwt = (name) => jwt.sign({ principal: name }, SECRET);\n\n// Broadcasting Function\nconst clients = new Map();\nconst broadcast = (data) => {\n  clients.forEach((client, key) => {\n    if (data.user && data.user === key) {\n      client.forEach((oneClient) => {\n        oneClient.send(JSON.stringify(data));\n      });\n    }\n  });\n};\n\nwss.on(\"connection\", (ws, req) => {\n  const url = new URL(req.url, `http://${req.headers.host}`);\n  const username1 = url.searchParams.get(\"username\");\n\n  ws.once(\"message\", (data) => {\n    const token = data.toString();\n    const decoded = jwt.verify(token, SECRET);\n    if (decoded && decoded.principal) {\n      const username = decoded.principal;\n      if (!clients.has(username)) {\n        clients.set(username, []);\n      }\n      clients.get(username).push(ws);\n    }\n  });\n\n  ws.on(\"close\", () => {\n    const userConnections = clients.get(username1);\n    if (userConnections) {\n      const index = userConnections.indexOf(ws);\n      if (index !== -1) {\n        userConnections.splice(index, 1);\n        if (userConnections.length === 0) {\n          clients.delete(username1);\n        }\n      }\n    }\n  });\n});\n\n// Routes\nconst router = new Router();\n\n// Login Route\nrouter.post(\"/login\", async (ctx) => {\n  const { name, pass } = ctx.request.body;\n  if (!name || !pass) {\n    ctx.response.status = 400;\n    ctx.response.body = { message: \"Name and password are required\" };\n  } else if (checkLogin({ name, pass })) {\n    ctx.response.status = 200;\n    ctx.response.body = { token: createJwt(name) };\n  } else {\n    ctx.response.status = 400;\n    ctx.response.body = { message: \"Invalid credentials\" };\n  }\n});\n\n// Fetch all cars\nrouter.get(\"/car\", verifyJwtMiddleware, async (ctx) => {\n  try {\n    const rows = await db.all(\"SELECT * FROM cars\");\n    ctx.response.body = rows;\n    ctx.response.status = 200;\n  } catch (err) {\n    ctx.response.status = 500;\n    ctx.response.body = { message: \"Error fetching cars\" };\n  }\n});\n\n// Add a new car\nrouter.post(\"/car\", verifyJwtMiddleware, async (ctx) => {\n    const { brand, is_new } = ctx.request.body;\n  if (!brand) {\n    ctx.response.status = 400;\n    ctx.response.body = { message: \"Brand is required\" };\n    return;\n  }\n\n  try {\n    const date = new Date().toISOString();\n    const result = await db.run(\n      \"INSERT INTO cars (brand, date, is_new) VALUES (?, ?, ?)\",\n      [brand, date, is_new ? 1 : 0]\n    );\n    const newCar = { id: result.lastID, brand, date, is_new };\n    ctx.response.body = newCar;\n    ctx.response.status = 201;\n    broadcast({ event: \"created\", user: ctx.state.user, payload: newCar });\n  } catch (err) {\n    ctx.response.status = 500;\n    ctx.response.body = { message: \"Error adding car\" };\n  }\n});\n\n// Fetch a specific car\nrouter.get(\"/car/:id\", verifyJwtMiddleware, async (ctx) => {\n    const { id } = ctx.params;\n    console.log(\"looking for car with id: \", id);\n\n  try {\n    const car = await db.get(\"SELECT * FROM cars WHERE id = ?\", [id]);\n    if (car) {\n      ctx.response.body = car;\n        ctx.response.status = 200;\n    console.log(\"found car: \", id);        \n    } else {\n      ctx.response.status = 404;\n        ctx.response.body = { message: `Car with id ${id} not found` };\n        console.log(\"no car: \", id);        \n        \n    }\n  } catch (err) {\n    ctx.response.status = 500;\n    ctx.response.body = { message: \"Error fetching car\" };\n  }\n});\n\n// Update a car\nrouter.put(\"/car/:id\", verifyJwtMiddleware, async (ctx) => {\n  const { id } = ctx.params;\n  const { brand, is_new } = ctx.request.body;\n\n  try {\n    const car = await db.get(\"SELECT * FROM cars WHERE id = ?\", [id]);\n    if (!car) {\n      ctx.response.status = 404;\n      ctx.response.body = { message: `Car with id ${id} not found` };\n      return;\n    }\n\n    const updatedCar = {\n      ...car,\n      brand: brand || car.brand,\n      is_new: is_new !== undefined ? (is_new ? 1 : 0) : car.is_new,\n    };\n\n    await db.run(\n      \"UPDATE cars SET brand = ?, is_new = ? WHERE id = ?\",\n      [updatedCar.brand, updatedCar.is_new, id]\n    );\n\n    ctx.response.body = updatedCar;\n    ctx.response.status = 200;\n    broadcast({ event: \"updated\", user: ctx.state.user, payload: updatedCar });\n  } catch (err) {\n    ctx.response.status = 500;\n    ctx.response.body = { message: \"Error updating car\" };\n  }\n});\n\n// Delete a car\nrouter.del(\"/car/:id\", verifyJwtMiddleware, async (ctx) => {\n  const { id } = ctx.params;\n  try {\n    const car = await db.get(\"SELECT * FROM cars WHERE id = ?\", [id]);\n    if (!car) {\n      ctx.response.status = 404;\n      ctx.response.body = { message: `Car with id ${id} not found` };\n      return;\n    }\n\n    await db.run(\"DELETE FROM cars WHERE id = ?\", [id]);\n    ctx.response.status = 204;\n    broadcast({ event: \"deleted\", user: ctx.state.user, payload: car });\n  } catch (err) {\n    ctx.response.status = 500;\n    ctx.response.body = { message: \"Error deleting car\" };\n  }\n});\n\napp.use(router.routes());\napp.use(router.allowedMethods());\nmodule.exports = server;\n","const server = require (\"./app\");\n\nserver.listen(3000, () => {\n  console.log(\"Server is running on http://localhost:3000\");\n});\n"]}