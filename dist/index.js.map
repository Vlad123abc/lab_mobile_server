{"version":3,"sources":["index.js"],"names":["Koa","require","app","server","createServer","callback","WebSocket","wss","Server","Router","cors","bodyparser","jwt","use","SECRET","verifyJwtMiddleware","ctx","next","authHeader","headers","authorization","startsWith","response","status","body","message","token","split","decoded","verify","state","user","principal","err","Car","constructor","id","brand","date","is_new","User","name","pass","carsByUser","users","lastId","broadcast","data","clients","forEach","client","readyState","OPEN","send","JSON","stringify","router","once","console","log","toString","verifyJwt","username","has","set","get","push","ws","on","userConnections","index","indexOf","splice","length","delete","checkLogin","some","u","post","request","createJwt","sign","createItem","item","Date","event","payload","carId","params","car","find","put","cars","findIndex","_objectSpread","del","routes","allowedMethods","listen"],"mappings":"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","file":"index.js","sourceRoot":"..\\src","sourcesContent":["const Koa = require('koa');\r\nconst app = new Koa();\r\nconst server = require('http').createServer(app.callback());\r\nconst WebSocket = require('ws');\r\nconst wss = new WebSocket.Server({ server });\r\nconst Router = require('koa-router');\r\nconst cors = require('koa-cors');\r\nconst bodyparser = require('koa-bodyparser');\r\nconst jwt = require('jsonwebtoken');\r\n\r\napp.use(bodyparser());\r\napp.use(cors());\r\n\r\nconst SECRET = 'shhhhh';\r\n\r\n// JWT Verification Middleware\r\nconst verifyJwtMiddleware = async (ctx, next) => {\r\n  const authHeader = ctx.headers.authorization;\r\n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n    ctx.response.status = 401;\r\n    ctx.response.body = { message: 'Authorization token required' };\r\n    return;\r\n  }\r\n\r\n  const token = authHeader.split(' ')[1];\r\n  try {\r\n    const decoded = jwt.verify(token, SECRET);\r\n    ctx.state.user = decoded.principal; // Store decoded user information in context\r\n    await next();\r\n  } catch (err) {\r\n    ctx.response.status = 403;\r\n    ctx.response.body = { message: 'Invalid or expired token' };\r\n  }\r\n};\r\n\r\n// Error Handling Middleware\r\napp.use(async (ctx, next) => {\r\n  try {\r\n    await next();\r\n  } catch (err) {\r\n    ctx.response.body = { message: err.message || 'Unexpected error' };\r\n    ctx.response.status = 500;\r\n  }\r\n});\r\n\r\n// Classes for User and Car\r\nclass Car {\r\n  constructor({ id, brand, date, is_new }) {\r\n    this.id = id;\r\n    this.brand = brand;\r\n    this.date = date;\r\n    this.is_new = is_new;\r\n  }\r\n}\r\n\r\nclass User {\r\n  constructor(name, pass) {\r\n    this.name = name;\r\n    this.pass = pass;\r\n  }\r\n}\r\n\r\nconst carsByUser = {};  // Object storing cars per user: { username: [Car, Car, ...] }\r\nconst users = [new User(\"vlad\", \"1234\"), new User(\"gigel\", \"1111\")];\r\nlet lastId = 0;\r\n\r\n// Broadcasting Function\r\nconst broadcast = data =>\r\n  wss.clients.forEach(client => {\r\n    if (client.readyState === WebSocket.OPEN) {\r\n      client.send(JSON.stringify(data));\r\n    }\r\n  });\r\n\r\nconst router= new Router();\r\n\r\nwss.once('message', (data) => {\r\n    console.log(\"Init message received\")\r\n    const token = data.toString(); // Assume first message is the JWT token\r\n    const decoded = verifyJwt(token);\r\n\r\n    if (decoded && decoded.principal) {\r\n      username = decoded.principal;\r\n\r\n      // If the user already has connections, add this WebSocket to the existing array\r\n      if (!clients.has(username)) {\r\n        clients.set(username, []);\r\n      }\r\n      clients.get(username)\r\n        .push(ws); // Store the WebSocket connection in the array\r\n      console.log(`Client authenticated: ${username}`);\r\n    }\r\n  })\r\nwss.on('close', () => {\r\n  console.log(`Client disconnected: ${username}`);\r\n  // Remove this WebSocket from the client's list of connections\r\n  const userConnections = clients.get(username);\r\n  const index = userConnections.indexOf(ws);\r\n  if (index !== -1) {\r\n    userConnections.splice(index, 1);\r\n    if (userConnections.length === 0) {\r\n      clients.delete(username); // Remove the user from the map if no connections left\r\n    }\r\n  }\r\n})\r\n\r\nconst checkLogin = (user) => {\r\n  return users.some(u => u.name === user.name && u.pass === user.pass);\r\n}\r\n\r\nrouter.post('/login', async (ctx) => {\r\n  const { name, pass } = ctx.request.body;\r\n  if (!name || !pass) {\r\n    ctx.response.status = 400;\r\n    ctx.response.body = { message: \"Name and password are required\" };\r\n  } else if (checkLogin(new User(name, pass))) {\r\n    ctx.response.status = 200;\r\n    ctx.response.body = { token: createJwt(name) };\r\n  } else {\r\n    ctx.response.status = 400;\r\n    ctx.response.body = { message: \"Invalid credentials\" };\r\n  }\r\n});\r\n\r\nconst createJwt = (name) => {\r\n  return jwt.sign({ principal: name }, SECRET);\r\n};\r\n\r\n// Routes\r\n\r\n// Fetch all cars for the authenticated user\r\nrouter.get('/car', verifyJwtMiddleware, ctx => {\r\n  const user = ctx.state.user;\r\n  ctx.response.body = carsByUser[user] || []; // Return an empty array if no cars\r\n  ctx.response.status = 200;\r\n});\r\n\r\nconst createItem = async (ctx) => {\r\n  const item = ctx.request.body;\r\n  if (!item.brand) {\r\n    ctx.response.body = { message: 'Brand is missing' };\r\n    ctx.response.status = 400;\r\n    return;\r\n  }\r\n\r\n  const user = ctx.state.user;\r\n  item.id = `${++lastId}`;\r\n  item.date = new Date();\r\n\r\n  // Initialize the array if it doesn't exist for the user\r\n  if (!carsByUser[user]) {\r\n    carsByUser[user] = [];\r\n  }\r\n\r\n  carsByUser[user].push(item); // Add car to the user's list\r\n  ctx.response.body = item;\r\n  ctx.response.status = 201;\r\n  console.log(\"Car addeed\")\r\n  broadcast({ event: 'created', payload: { item } });\r\n};\r\n\r\nrouter.post('/car', verifyJwtMiddleware, async (ctx) => {\r\n  await createItem(ctx);\r\n});\r\n\r\n// Fetch a specific car for the authenticated user\r\nrouter.get('/car/:id', verifyJwtMiddleware, async (ctx) => {\r\n  const user = ctx.state.user;\r\n  const carId = ctx.params.id;\r\n  const car = (carsByUser[user] || []).find(car => car.id === carId);\r\n  if (car) {\r\n    ctx.response.body = car;\r\n    ctx.response.status = 200;\r\n  } else {\r\n    ctx.response.body = { message: `Car with id ${carId} not found` };\r\n    ctx.response.status = 404;\r\n  }\r\n});\r\n\r\n// Update a car for the authenticated user\r\nrouter.put('/car/:id', verifyJwtMiddleware, async (ctx) => {\r\n  const user = ctx.state.user;\r\n  const id = ctx.params.id;\r\n  const item = ctx.request.body;\r\n  const cars = carsByUser[user] || [];\r\n  const index = cars.findIndex(car => car.id === id);\r\n\r\n  if (index === -1) {\r\n    ctx.response.body = { message: `Car with id ${id} not found` };\r\n    ctx.response.status = 404;\r\n    return;\r\n  }\r\n\r\n  cars[index] = { ...cars[index], ...item };\r\n  ctx.response.body = cars[index];\r\n  ctx.response.status = 200;\r\n  broadcast({ event: 'updated', payload: { item } });\r\n});\r\n\r\n// Delete a car for the authenticated user\r\nrouter.del('/car/:id', verifyJwtMiddleware, ctx => {\r\n  const user = ctx.state.user;\r\n  const id = ctx.params.id;\r\n  const cars = carsByUser[user] || [];\r\n  const index = cars.findIndex(car => car.id === id);\r\n\r\n  if (index !== -1) {\r\n    const item = cars[index];\r\n    cars.splice(index, 1);\r\n    broadcast({ event: 'deleted', payload: { item } });\r\n    ctx.response.status = 204;\r\n  } else {\r\n    ctx.response.body = { message: `Car with id ${id} not found` };\r\n    ctx.response.status = 404;\r\n  }\r\n});\r\n\r\napp.use(router.routes());\r\napp.use(router.allowedMethods());\r\n\r\nserver.listen(3000, () => {\r\n  console.log('Server is running on http://localhost:3000');\r\n});\r\n"]}
